plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'com.github.node-gradle.node'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation ("ch.qos.logback:logback-classic")
    implementation ("org.projectlombok:lombok")
    annotationProcessor ("org.projectlombok:lombok")

    implementation 'org.mapstruct:mapstruct'
    annotationProcessor "org.mapstruct:mapstruct-processor:${Versions.mapstruct}"

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-amqp")

    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    project(':front')

    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}


if (project.hasProperty("deploy")) {
    task copyWebApp(type: Copy) {
        from "$rootDir/front/build"
        into "$rootDir/server/build/resources/main/static/."
    }
    bootJar.dependsOn(copyWebApp)
    compileJava.dependsOn ":front:build"
}






